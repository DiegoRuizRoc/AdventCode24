#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm> // Para std::transform
using namespace std;

// Direcciones posibles para buscar la palabra "XMAS"
const vector<pair<int, int>> directions = {
    {0, 1},   // Derecha
    {1, 0},   // Abajo
    {1, 1},   // Diagonal abajo-derecha
    {1, -1},  // Diagonal abajo-izquierda
    {0, -1},  // Izquierda
    {-1, 0},  // Arriba
    {-1, -1}, // Diagonal arriba-izquierda
    {-1, 1}   // Diagonal arriba-derecha
};

// Función para imprimir la matriz (opcional para depuración)
void printMatrix(const vector<vector<char>> &matrix) {
    for (const auto &row : matrix) {
        for (const auto &ch : row) {
            cout << ch << " ";
        }
        cout << endl;
    }
}

// Función para buscar "XMAS" en todas las direcciones
int countXMAS(const vector<vector<char>> &matrix, const string &word) {
    int rows = matrix.size();
    int cols = matrix[0].size();
    int count = 0;

    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            // Intentar encontrar "XMAS" desde cada posición y en cada dirección
            for (const auto &dir : directions) {
                int x = i, y = j;
                int k;
                for (k = 0; k < word.size(); ++k) {
                    // Verificar límites
                    if (x < 0 || x >= rows || y < 0 || y >= cols || matrix[x][y] != word[k]) {
                        break;
                    }
                    x += dir.first;  // Siguiente fila en la dirección
                    y += dir.second; // Siguiente columna en la dirección
                }
                if (k == word.size()) {
                    count++;
                }
            }
        }
    }

    return count;
}

int main() {

    // Abrir el archivo
    ifstream file("XMAS");
    if (!file.is_open()) {
        cerr << "Error al abrir el fichero." << endl;
        return 1;
    }

    // Leer el contenido del archivo en una matriz
    vector<vector<char>> matrix;
    string line;
    while (getline(file, line)) {
        // Convertir la línea a mayúsculas para una búsqueda insensible a mayúsculas
        transform(line.begin(), line.end(), line.begin(), ::toupper);
        matrix.push_back(vector<char>(line.begin(), line.end()));
    }

    file.close(); // Cerrar el archivo

    // Imprimir la matriz (opcional para verificar la lectura)
    cout << "Matriz leída del fichero:" << endl;
    printMatrix(matrix);

    // Buscar todas las ocurrencias de "XMAS"
    int totalXMAS = countXMAS(matrix, "XMAS");
    cout << "Número total de 'XMAS' encontrados: " << totalXMAS << endl;

    return 0;
}
